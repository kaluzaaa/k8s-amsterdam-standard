apiVersion: apps/v1
kind: Deployment
metadata:
  name: echo-v1
spec:
  selector:
    matchLabels:
      app: echo-v1
  template:
    metadata:
      labels:
        app: echo-v1
    spec:
      containers:
      - name: echo-v1
        image: gcr.io/google_containers/echoserver:1.10
        ports:
        - containerPort: 8080
        resources: {}
---
apiVersion: v1
kind: Service
metadata:
  name: echo-v1
spec:
  selector:
    app: echo-v1
  ports:
  - port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: echo-v2
spec:
  selector:
    matchLabels:
      app: echo-v2
  template:
    metadata:
      labels:
        app: echo-v2
    spec:
      containers:
      - name: echo-v2
        image: gcr.io/google_containers/echoserver:1.10
        ports:
        - containerPort: 8080
        resources: {}
---
apiVersion: v1
kind: Service
metadata:
  name: echo-v2
spec:
  selector:
    app: echo-v2
  ports:
  - port: 8080
    targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: echo
spec:
  ingressClassName: nginx
  rules:
  - host: echo.20-102-29-117.nip.io
    http:
      paths:
      - path: /api/orders
        pathType: Prefix
        backend:
          service:
            name: echo-v1
            port:
              number: 8080
      - path: /api/checkout
        pathType: Prefix
        backend:
          service:
            name: echo-v2
            port:
              number: 8080
---
# Ingress rewrite target
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: echo-v2
  annotations:
    nginx.ingress.kubernetes.io/app-root: /test
spec:
  ingressClassName: nginx
  rules:
  - host: echo.20-102-29-117.nip.io
    http:
      paths:
      - path: /api/v2/orders
        pathType: Prefix
        backend:
          service:
            name: echo-v1
            port:
              number: 8080
